version: "3.3"
services:
  postgres:
    container_name: ${POSTGRES_HOST}
    image: postgres:13.3
    restart: always
    command:
      - "postgres"
      - "-c"
      - "max_connections=5"
      - "-c"
      - "shared_buffers=0.3GB"
      - "-c"
      - "effective_cache_size=1GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=2GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=1000"
      - "-c"
      - "pg_stat_statements.track=all"
      - "-c"
      - "log_destination=csvlog"
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=pg_log"
      - "-c"
      - "log_filename=postgresql-%Y-%m-%d_%H%M%S.log"
      - "-c"
      - "log_statement=mod"
      - "-c"
      - "log_timezone=Europe/Moscow"
    environment:
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - .:/var/lib/postgresql/data
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  accounting_system:
    container_name: accounting_system
    restart: always
    build: ./backend
    command:
      bash -c "
      python3 manage.py makemigrations --noinput &&
      python3 manage.py migrate --noinput &&
      python3 manage.py runserver 0.0.0.0:80
      "
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    networks:
      - postgres


networks:
  postgres:
    driver: bridge